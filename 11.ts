// 元祖
// 数组合并了相同类型的对象，而元祖合并了不同类型的对象

// 定义一个元祖：
let yz1: [number, string, any] = [4, "6", 6];


let yz2: [string, number];
// 可以通过索引对已知的元祖进行赋值
// 通过索引的方式，可以只给元祖的某一个位置赋值
yz2[0] = "hgfd";
// 或者调用方法
yz2[0].valueOf();

// 但是直接对变量赋值的时候，不能够只赋值其中的某一个，必须全部赋值
let yz3: [string, number];
// yz3 = ["hifhiasd"]  报错，赋值了一个位置
yz3 = ["fsdfs", 6664];


// 越界的元素
let yz4: [string, number];
yz4 = ["jkj", 5435];
// 当对元祖进行越界元素的操作的时候，例如在yz4中添加第三个元素时，越界元素的类型是每个元素类型的联合类型

// yz4.push({"dd":454})  报错，因为每个元素类型组成的联合类型中没有any类型

yz4.push("ffd");  //成功，因为元组中的联合类型 包含string类型
